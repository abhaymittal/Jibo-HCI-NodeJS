{
    "1": {
        "id": 1,
        "class": "Sequence",
        "name": "",
        "options": {},
        "asset-pack": "core",
        "children": [
            "ed87e860-57d1-48d7-9457-464bd2d11785",
            "ab31480f-e99f-4789-b675-3fad27a11ce9"
        ],
        "decorators": []
    },
    "meta": {
        "version": 1
    },
    "ed87e860-57d1-48d7-9457-464bd2d11785": {
        "id": "ed87e860-57d1-48d7-9457-464bd2d11785",
        "class": "PlayAnimation",
        "name": "",
        "options": {
            "animPath": "greeting.keys",
            "config": [
                "(animation) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1
    },
    "ab31480f-e99f-4789-b675-3fad27a11ce9": {
        "id": "ab31480f-e99f-4789-b675-3fad27a11ce9",
        "class": "ExecuteScript",
        "name": "",
        "options": {
            "exec": [
                "() => {",
                "  var express = require('express');",
                "  var bodyParser = require('body-parser');",
                "  var app = express();",
                "  ",
                "  app.use(bodyParser.urlencoded({ extended: false }));",
                "  app.use(bodyParser.json());",
                "",
                "  var server = app.listen(3000, function(){",
                "      console.log('Listening on port %d', server.address().port);",
                "  });",
                "  var animRoot=__dirname+\"\\\\..\\\\\";",
                "  app.get('/', function(req,res){",
                "    console.log(\"get received\");",
                "    res.send(\"ping\");",
                "  });",
                "",
                "//Adding Myoband functions",
                "  app.post('/sendresult',function(req,res) {",
                "    res.send(\"post mesage received\");",
                "    jibo.tts.speak(req.body.desc);",
                "  });",
                "  //wave in begin",
                "  app.get('/wavein',function(req,res) {",
                "    jibo.tts.speak(\"You waved in\");",
                "    ",
                "      jibo.animate.createAnimationBuilderFromKeysPath(animRoot+\"\\\\animations\\\\waveIn.keys\",animRoot, (builder) => {",
                "        // add listener",
                "        ",
                "        builder.on(jibo.animate.AnimationEventType.STOPPED, (eventType, instance, payload) => {",
                "            console.log(\"Animation stopped; was interrupted = \" + payload.interrupted);",
                "        });",
                "        builder.play();",
                "      });",
                "    ",
                "    });",
                "  //wave in end",
                "  ",
                "  ",
                "  //wave out begin",
                "  app.get('/waveout',function(req,res) {",
                "    jibo.tts.speak(\"You waved out\");",
                "    ",
                "      jibo.animate.createAnimationBuilderFromKeysPath(animRoot+\"\\\\animations\\\\waveOut.keys\",animRoot, (builder) => {",
                "        // add listener",
                "        ",
                "        builder.on(jibo.animate.AnimationEventType.STOPPED, (eventType, instance, payload) => {",
                "            console.log(\"Animation stopped; was interrupted = \" + payload.interrupted);",
                "        });",
                "        builder.play();",
                "      });",
                "    ",
                "    });",
                "    //wave out end",
                "    ",
                "    //fist",
                "    ",
                "    app.get('/fist',function(req,res) {",
                "      jibo.tts.speak(\"If only I had arms to give a fist bump\");     ",
                "      jibo.animate.createAnimationBuilderFromKeysPath(animRoot+\"\\\\animations\\\\fist.keys\",animRoot, (builder) => {",
                "          // add listener",
                "          ",
                "          builder.on(jibo.animate.AnimationEventType.STOPPED, (eventType, instance, payload) => {",
                "              console.log(\"Animation stopped; was interrupted = \" + payload.interrupted);",
                "          });",
                "          builder.play();",
                "        });",
                "      });",
                "    ",
                "    //fist end",
                "    ",
                "    //BCI Functions",
                "    //blink",
                "    app.get('/0', function(req,res){",
                "      console.log(\"EEG received\");",
                "      jibo.tts.speak(\"You just blinked\");",
                "      jibo.animate.blink();",
                "    });",
                "    ",
                "    //close eyes",
                "    app.get('/1', function(req,res){",
                "      console.log(\"EEG received\");",
                "      jibo.tts.speak(\"You just closed your eyes\");",
                "    });",
                "    ",
                "    //open eyes",
                "    app.get('/2', function(req,res){",
                "      console.log(\"EEG received\");",
                "      jibo.tts.speak(\"You just opened your eyes\");",
                "    });",
                "  }"
            ]
        },
        "asset-pack": "core",
        "parent": 1
    }
}