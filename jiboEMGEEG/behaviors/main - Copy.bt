{
    "1": {
        "id": 1,
        "class": "Sequence",
        "name": "",
        "options": {},
        "asset-pack": "core",
        "children": [
            "ed87e860-57d1-48d7-9457-464bd2d11785",
            "ab31480f-e99f-4789-b675-3fad27a11ce9"
        ],
        "decorators": []
    },
    "meta": {
        "version": 1
    },
    "ed87e860-57d1-48d7-9457-464bd2d11785": {
        "id": "ed87e860-57d1-48d7-9457-464bd2d11785",
        "class": "PlayAnimation",
        "name": "",
        "options": {
            "animPath": "greeting.keys",
            "config": [
                "(animation) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1
    },
    "ab31480f-e99f-4789-b675-3fad27a11ce9": {
        "id": "ab31480f-e99f-4789-b675-3fad27a11ce9",
        "class": "ExecuteScript",
        "name": "",
        "options": {
            "exec": [
                "() => {",
                "  var Hapi=require('hapi');",
                "  var animRoot=__dirname+\"\\\\..\\\\\";",
                "  const server=new Hapi.Server();",
                "  var serverPort = \"3000\";",
                "  var serverIP = \"127.0.0.1\";    ",
                "  //var serverIP = \"192.168.35.42\";    ",
                "  server.connection({ ",
                "  \t\"host\":serverIP,",
                "  \t\"port\": serverPort",
                "  });",
                "  server.route({",
                "    method: 'GET',",
                "    path: '/',",
                "    handler: function (request, reply) {",
                "        reply('Pinged');",
                "    }",
                "  });",
                "  server.route({",
                "    method: 'POST',",
                "    path: '/sendresult',",
                "    handler: function (request, reply) {",
                "      console.log(\"request received\");",
                "      console.log(request);",
                "        status=request.payload;",
                "        jibo.tts.speak(\"Hey! \"+request.payload.host+\" has \"+request.payload.desc);",
                "        reply('posted');",
                "    }",
                "  });",
                "  server.route({",
                "    method: 'POST',",
                "    path: '/wavein',",
                "    handler: function (request, reply) {",
                "      console.log(\"wave in request received\");",
                "      console.log(request);",
                "        status=request.payload;",
                "        console.log(animRoot);",
                "        jibo.animate.createAnimationBuilderFromKeysPath(animRoot+\"\\\\animations\\\\waveIn.keys\",animRoot, (builder) => {",
                "          // add listener",
                "          ",
                "          builder.on(jibo.animate.AnimationEventType.STOPPED, (eventType, instance, payload) => {",
                "              console.log(\"Animation stopped; was interrupted = \" + payload.interrupted);",
                "          });",
                "          builder.play();",
                "        });",
                "    }",
                "  });",
                "  ",
                "  server.route({",
                "    method: 'POST',",
                "    path: '/waveout',",
                "    handler: function (request, reply) {",
                "      console.log(\"wave in request received\");",
                "      console.log(request);",
                "        status=request.payload;",
                "        console.log(animRoot);",
                "        jibo.animate.createAnimationBuilderFromKeysPath(animRoot+\"\\\\animations\\\\waveOut.keys\",animRoot, (builder) => {",
                "          // add listener",
                "          ",
                "          builder.on(jibo.animate.AnimationEventType.STOPPED, (eventType, instance, payload) => {",
                "              console.log(\"Animation stopped; was interrupted = \" + payload.interrupted);",
                "          });",
                "          builder.play();",
                "        });",
                "    }",
                "  });",
                "  ",
                "  server.route({",
                "    method: 'POST',",
                "    path: '/fist',",
                "    handler: function (request, reply) {",
                "      console.log(\"wave in request received\");",
                "      console.log(request);",
                "        status=request.payload;",
                "        console.log(animRoot);",
                "        jibo.tts.speak(\"If only I had arms to fist bump\");",
                "    }",
                "  });",
                "  ",
                "  ",
                "  server.start((err) => {",
                "",
                "    if (err) {",
                "        throw err;",
                "    }",
                "    console.log('Server running at:', server.info.uri);",
                "  });",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1
    }
}